{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davor\\\\Desktop\\\\zavrni_fs\\\\klijent\\\\src\\\\student\\\\stranice\\\\Provjera.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Provjera.css\";\nimport { KorisnikContext } from \"../../dijeljeno/KorisnikContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Provjera = () => {\n  _s();\n\n  const user = useContext(KorisnikContext);\n  let {\n    id\n  } = useParams();\n  const [data, setData] = useState();\n  const [isLoading, setIsloading] = useState(true);\n  const [rjesenje, setRjesenje] = useState([]);\n\n  const handleRjesenje = event => {\n    setRjesenje([...rjesenje, {\n      pitanje: event.target.pitanje,\n      odgovor: event.target.value\n    }]);\n    event.target.parentNode.parentNode.disabled = true;\n  };\n\n  useEffect(async () => {\n    axios.get(`http://localhost:5000/kategorije/provjere/${id}`).then(res => {\n      //let provjera = res.data;\n      setData(res.data);\n      setIsloading(false); //console.log(\"provjera\", data[0].provjere);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const sendData = {\n      korisnik_id: user._id,\n      provjera_id: id,\n      rjesenja: rjesenje\n    };\n    console.log(sendData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: !isLoading && data[0].provjere.filter(p => p._id.includes(id)).map(nez => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: nez.naziv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [!isLoading && data[0].pitanja.map(p => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        id: p._id,\n        className: \"field\",\n        disabled: false,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: p.pitanje\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), p.odgovori.map(o => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: o,\n            name: p._id,\n            onClick: handleRjesenje,\n            pitanje: p.pitanje,\n            todgovor: p.tocanOdgovor\n          }, o, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: o,\n            children: o\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"posalji\",\n        children: \"Po\\u0161alji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Provjera, \"i5EeMvRMwWrKFBN3E6V3BLdO6B8=\", false, function () {\n  return [useParams];\n});\n\n_c = Provjera;\nexport default Provjera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provjera\");","map":{"version":3,"sources":["C:/Users/Davor/Desktop/zavrni_fs/klijent/src/student/stranice/Provjera.js"],"names":["React","useEffect","useState","useContext","useParams","axios","KorisnikContext","Provjera","user","id","data","setData","isLoading","setIsloading","rjesenje","setRjesenje","handleRjesenje","event","pitanje","target","odgovor","value","parentNode","disabled","get","then","res","catch","err","console","log","handleSubmit","preventDefault","sendData","korisnik_id","_id","provjera_id","rjesenja","provjere","filter","p","includes","map","nez","naziv","pitanja","odgovori","o","tocanOdgovor"],"mappings":"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","sourcesContent":["import { React, useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Provjera.css\";\r\nimport { KorisnikContext } from \"../../dijeljeno/KorisnikContext\";\r\nconst Provjera = () => {\r\n  const user = useContext(KorisnikContext);\r\n  let { id } = useParams();\r\n  const [data, setData] = useState();\r\n  const [isLoading, setIsloading] = useState(true);\r\n  const [rjesenje, setRjesenje] = useState([]);\r\n  const handleRjesenje = (event) => {\r\n    setRjesenje([\r\n      ...rjesenje,\r\n      {\r\n        pitanje: event.target.pitanje,\r\n        odgovor: event.target.value,\r\n      },\r\n    ]);\r\n    event.target.parentNode.parentNode.disabled = true;\r\n  };\r\n  useEffect(async () => {\r\n    axios\r\n      .get(`http://localhost:5000/kategorije/provjere/${id}`)\r\n      .then((res) => {\r\n        //let provjera = res.data;\r\n        setData(res.data);\r\n        setIsloading(false);\r\n        //console.log(\"provjera\", data[0].provjere);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const sendData = {\r\n      korisnik_id: user._id,\r\n      provjera_id: id,\r\n      rjesenja: rjesenje,\r\n    };\r\n\r\n    console.log(sendData);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        {!isLoading &&\r\n          data[0].provjere\r\n            .filter((p) => p._id.includes(id))\r\n            .map((nez) => <h1>{nez.naziv}</h1>)}\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        {!isLoading &&\r\n          data[0].pitanja.map((p) => (\r\n            <fieldset id={p._id} className=\"field\" disabled={false}>\r\n              <h4>{p.pitanje}</h4>\r\n              {p.odgovori.map((o) => (\r\n                <div>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value={o}\r\n                    key={o}\r\n                    name={p._id}\r\n                    onClick={handleRjesenje}\r\n                    pitanje={p.pitanje}\r\n                    todgovor={p.tocanOdgovor}\r\n                  />\r\n                  <label for={o}>{o}</label>\r\n                </div>\r\n              ))}\r\n            </fieldset>\r\n          ))}\r\n        <button type=\"submit\" className=\"posalji\">\r\n          Po≈°alji\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Provjera;\r\n"]},"metadata":{},"sourceType":"module"}